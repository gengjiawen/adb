{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4e4c8770_82b16c02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-09-14T20:45:48Z",
      "side": 1,
      "message": "Resolved merge conflicts. Also removed the TODO (action item wrt to your comment in https://android-review.git.corp.google.com/c/platform/packages/modules/adb/+/2751932).",
      "revId": "eb0d59dda447a5c1cc6f1a26d6631f10a943840d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6c1fc1d_85be2c06",
        "filename": "services.cpp",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-09-14T20:55:23Z",
      "side": 1,
      "message": "this comment is in the wrong place. there is nothing this code can do about this, nor any change that could be made to this code, so the comment is just distracting noise. please remove the entire comment.\n\n(if you know why the failure isn\u0027t making its way all the way back to the client, you could add a TODO in _that_ code. but this comment makes no sense in this location.)",
      "range": {
        "startLine": 156,
        "startChar": 28,
        "endLine": 159,
        "endChar": 50
      },
      "revId": "eb0d59dda447a5c1cc6f1a26d6631f10a943840d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f709514_0109082e",
        "filename": "services.cpp",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-09-14T21:12:52Z",
      "side": 1,
      "message": "Done - but my serious concern is: in 6 months there will be no trace of remnant information that will assist me (or anyone else who would look at this code) to deduce that the second parameter for SendFail(fd, error) is a (silently failing) no-op. \nI\u0027m unsure about: 1.) what rework is needed to propagate the error string to the client-side end? 2.) whether it even makes any sense to do this rework, given the current error (\"protocol fault\") is good enough for most users to understand that the transport is not alive.\nTBH, I wonder whether adding a TODO in the low-level function (WriteFdExactly()) would be misplaced as well?",
      "parentUuid": "c6c1fc1d_85be2c06",
      "range": {
        "startLine": 156,
        "startChar": 28,
        "endLine": 159,
        "endChar": 50
      },
      "revId": "eb0d59dda447a5c1cc6f1a26d6631f10a943840d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d1e7fca_5a8cbd05",
        "filename": "services.cpp",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-09-14T23:42:00Z",
      "side": 1,
      "message": "\u003e Done - but my serious concern is: in 6 months there will be no trace of remnant information that will assist me (or anyone else who would look at this code) to deduce that the second parameter for SendFail(fd, error) is a (silently failing) no-op.\n\nthat bug is not here.\n\nif you want to record that, record it in the place that\u0027s _causing_ that problem.\n\nif you don\u0027t know where that is, you can file a bug with the repro steps and come back to it.\n\n\u003e ... whether it even makes any sense to do this rework ...\n\nme neither. which is _another_ reason why this comment isn\u0027t useful --- leaving a comment (even in the right place!) is making a stronger claim than we can really make right now. (i\u0027d argue that \"protocol fault\" is definitely _not_ good enough, and it\u0027s a pretty constant cause of confusion and bogus bugs. but whether it\u0027s worth the [unknown amount of] work to fix that is a different question.)\n\n\u003e TBH, I wonder whether adding a TODO in the low-level function (WriteFdExactly()) would be misplaced as well?\n\nyes, for the same reason --- there\u0027s absolutely nothing _that_ function can do about the problem either.\n\nthe bug (aiui) is that the _protocol_ is broken, and closes the connection before reporting the error. none of the _writing_ code can do anything about that. it\u0027s literally already doing the right thing (passing the detail string here, writing it to the fd in SendFail()/WriteFdExactly()).",
      "parentUuid": "8f709514_0109082e",
      "range": {
        "startLine": 156,
        "startChar": 28,
        "endLine": 159,
        "endChar": 50
      },
      "revId": "eb0d59dda447a5c1cc6f1a26d6631f10a943840d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}