{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "38b689a1_1f9e1720",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-01-10T21:20:39Z",
      "side": 1,
      "message": "isn\u0027t an `allow_root` that defaults to `true` worrying?\n\nand does this actually solve the problem: why won\u0027t we see partners override this too?",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1796d154_b6228bcd",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-01-11T03:38:53Z",
      "side": 1,
      "message": "\u003e isn\u0027t an `allow_root` that defaults to `true` worrying?\n\nIf the default value is false, then we won\u0027t be able to run `adb root` on userdebug/eng builds.\n\nLet me add some comments to clarify this.\n\nIn an USER build, \"__android_log_is_debuggable()\" is false so we cannot run `adb root` due to L36.\n\nSome partner might override \"__android_log_is_debuggable()\" just to skip ADB authentication on a unlocked device for automate testing. \n\nIn this case, even if they override \"ro.adb.allow_root\" to True, `adb root` will get stuck because there is no userdebug sepolicy. i.e., \"ro.adb.allow_root\" is more like a protection here.",
      "parentUuid": "38b689a1_1f9e1720",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a6da9b0_dda4a674",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-01-11T05:47:18Z",
      "side": 1,
      "message": "How about re-naming \"ro.adb.allow_root\" to \"ro.adb.debuggable.allow_root\" to make it clear?\n\nMeans allow adb root on debuggable.",
      "parentUuid": "1796d154_b6228bcd",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03dfe083_395a6efa",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-01-12T03:09:56Z",
      "side": 1,
      "message": "\u003e Some partner might override \"__android_log_is_debuggable()\" just to skip ADB authentication on a unlocked device for automate testing. \n\nwhich isn\u0027t supported. they should be using vendor keys instead.",
      "parentUuid": "8a6da9b0_dda4a674",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d95fb735_c3fc2061",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-01-12T03:57:50Z",
      "side": 1,
      "message": "IIRC, it seems that ADB_VENDOR_KEYS only work in userdebug/eng build, right?\n\nThe request here is to automate user build testing, which is the final shipping image. Because the delta between user v.s userdebug cannot be easily tracked.",
      "parentUuid": "03dfe083_395a6efa",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3ca6624_a2357dd0",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-01-17T04:11:40Z",
      "side": 1,
      "message": "After checking, they can probably build a special userdebug.img with /data/misc/adb/adb_keys\n\nhttps://cs.android.com/android/platform/superproject/+/master:frameworks/native/libs/adbd_auth/adbd_auth.cpp;l\u003d391;drc\u003de3e1cd5351b445a0d8df1617bbd2fc456c16cbd0\n\nThis should be able to skip ADB auth, IIUC.\n\nSo let me drop this CL.",
      "parentUuid": "d95fb735_c3fc2061",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0c085b_0e304893",
        "filename": "daemon/restart_service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-01-17T16:05:16Z",
      "side": 1,
      "message": "Just to clarify, you don\u0027t mean \"skip ADB auth\" right? But rather that they can include their own adb keys on their own debug builds which will result in a key match and thus adb auth succeeding?",
      "parentUuid": "a3ca6624_a2357dd0",
      "revId": "21e356c45e52aedafe055894a35c52ccd2dc5f9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}