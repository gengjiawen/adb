.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "ADB" "1" "" "Version 1.0.41" "ADB CLI Man Page"
.hy
.SH NAME
.PP
\f[B]adb\f[R] \[em] CLI Client for ADB (Android Debug Bridge) Server.
.SH SYNOPSIS
.PP
\f[B]adb\f[R] [\f[I]GLOBAL_OPTIONS\f[R]] command [\f[I]COMMAND
OPTIONS\f[R]]
.SH DESCRIPTION
.PP
Connects to the ADB Server via its smart socket interface.
Allows to send requests, receive responses, and manage lifecycle.
.PP
Tasks are performed via commands.
Some commands are fulfilled directly by the server while others are
forwarded toward the ADBD (ADB Daemon) running on the device.
.SH GLOBAL OPTIONS:
.TP
\f[B]-a\f[R]
Listen on all network interfaces, not just localhost
.TP
\f[B]-d\f[R]
Use USB device (error if multiple devices connected)
.TP
\f[B]-e\f[R]
Use TCP/IP device (error if multiple TCP/IP devices available)
.TP
\f[B]-s \f[BI]SERIAL\f[B]\f[R]
Use device with given serial (overrides $ANDROID_SERIAL)
.TP
\f[B]-t \f[BI]ID\f[B]\f[R]
Use device with given transport id
.TP
\f[B]-H\f[R]
Name of adb server host [default=localhost]
.TP
\f[B]-P\f[R]
Port of adb server [default=5037]
.TP
\f[B]-L \f[BI]SOCKET\f[B]\f[R]
Listen on given socket for adb server [default=tcp:localhost:5037]
.TP
\f[B]--one-device \f[BI]SERIAL\f[B]|\f[BI]USB\f[B]\f[R]
Server will only connect to one USB device, specified by a serial number
or USB device address (only with `start-server' or `server nodaemon').
.PP
\f[B]--exit-on-write-error\f[R] :Exit if stdout is closed
.SH GENERAL COMMANDS:
.TP
devices [-l]
List connected devices (-l for long output)
.TP
help
Show this help message
.TP
version
Show version num
.SH NETWORKING:
.PP
connect HOST[:PORT] connect to a device via TCP/IP [default port=5555]
.PP
disconnect [HOST[:PORT]] disconnect from given TCP/IP device [default
port=5555], or all
.PP
pair HOST[:PORT] [PAIRING CODE] pair with a device for secure TCP/IP
communication
.PP
forward \[en]list list all forward socket connections
.PP
forward [\[en]no-rebind] LOCAL REMOTE forward socket connection using:
tcp: ( may be \[lq]tcp:0\[rq] to pick any open port) localabstract:
localreserved: localfilesystem: jdwp: (remote only) vsock:: (remote
only) acceptfd: (listen only)
.PP
forward \[en]remove LOCAL remove specific forward socket connection
.PP
forward \[en]remove-all remove all forward socket connections
.PP
reverse \[en]list list all reverse socket connections from device
.PP
reverse [\[en]no-rebind] REMOTE LOCAL reverse socket connection using:
tcp: ( may be \[lq]tcp:0\[rq] to pick any open port) localabstract:
localreserved: localfilesystem:
.PP
reverse \[en]remove REMOTE remove specific reverse socket connection
.PP
reverse \[en]remove-all remove all reverse socket connections from
device
.PP
mdns check check if mdns discovery is available
.PP
mdns services list all discovered services
.SH FILE TRANSFER:
.PP
push [\[en]sync] [-z ALGORITHM] [-Z] LOCAL\&... REMOTE copy local
files/directories to device \[en]sync: only push files that are newer on
the host than the device -n: dry run: push files to device without
storing to the filesystem -z: enable compression with a specified
algorithm (any/none/brotli/lz4/zstd) -Z: disable compression
.PP
pull [-a] [-z ALGORITHM] [-Z] REMOTE\&... LOCAL copy files/dirs from
device -a: preserve file timestamp and mode -z: enable compression with
a specified algorithm (any/none/brotli/lz4/zstd) -Z: disable compression
.PP
sync [-l] [-z ALGORITHM] [-Z]
[all|data|odm|oem|product|system|system_ext|vendor] sync a local build
from $ANDROID_PRODUCT_OUT to the device (default all) -n: dry run: push
files to device without storing to the filesystem -l: list files that
would be copied, but don\[cq]t copy them -z: enable compression with a
specified algorithm (any/none/brotli/lz4/zstd) -Z: disable compression
.SH SHELL:
.PP
shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND\&...] run remote shell
command (interactive shell if no command given) -e: choose escape
character, or \[lq]none\[rq]; default `\[ti]' -n: don\[cq]t read from
stdin -T: disable pty allocation -t: allocate a pty if on a tty (-tt:
force pty allocation) -x: disable remote exit codes and stdout/stderr
separation
.PP
emu COMMAND run emulator console command
.SH APP INSTALLATION (SEE ALSO \f[C]ADB SHELL CMD PACKAGE HELP\f[R]):
.PP
install [-lrtsdg] [\[en]instant] PACKAGE push a single package to the
device and install it
.PP
install-multiple [-lrtsdpg] [\[en]instant] PACKAGE\&... push multiple
APKs to the device for a single package and install them
.PP
install-multi-package [-lrtsdpg] [\[en]instant] PACKAGE\&... push one or
more packages to the device and install them atomically -r: replace
existing application -t: allow test packages -d: allow version code
downgrade (debuggable packages only) -p: partial application install
(install-multiple only) -g: grant all runtime permissions \[en]abi ABI:
override platform\[cq]s default ABI \[en]instant: cause the app to be
installed as an ephemeral install app \[en]no-streaming: always push APK
to device and invoke Package Manager as separate steps \[en]streaming:
force streaming APK directly into Package Manager \[en]fastdeploy: use
fast deploy \[en]no-fastdeploy: prevent use of fast deploy
\[en]force-agent: force update of deployment agent when using fast
deploy \[en]date-check-agent: update deployment agent when local version
is newer and using fast deploy \[en]version-check-agent: update
deployment agent when local version has different version code and using
fast deploy \[en]local-agent: locate agent files from local source build
(instead of SDK location) (See also \f[C]adb shell pm help\f[R] for more
options.)
.PP
uninstall [-k] PACKAGE remove this app package from the device `-k':
keep the data and cache directories
.SH DEBUGGING:
.PP
bugreport [PATH] write bugreport to given PATH [default=bugreport.zip];
if PATH is a directory, the bug report is saved in that directory.
devices that don\[cq]t support zipped bug reports output to stdout.
jdwp list pids of processes hosting a JDWP transport
.PP
logcat show device log (logcat \[en]help for more)
.SH SECURITY:
.PP
disable-verity disable dm-verity checking on userdebug builds
.PP
enable-verity re-enable dm-verity checking on userdebug builds
.PP
keygen FILE generate adb public/private key; private key stored in FILE,
.SH SCRIPTING:
.PP
wait-for[-TRANSPORT]-STATE\&... wait for device to be in a given state
STATE: device, recovery, rescue, sideload, bootloader, or disconnect
TRANSPORT: usb, local, or any [default=any]
.PP
get-state print offline | bootloader | device
.PP
get-serialno print
.PP
get-devpath print
.PP
remount [-R] remount partitions read-write.
if a reboot is required, -R will will automatically reboot the device.
.PP
reboot [bootloader|recovery|sideload|sideload-auto-reboot] reboot the
device; defaults to booting system image but supports bootloader and
recovery too.
sideload reboots into recovery and automatically starts sideload mode,
sideload-auto-reboot is the same but reboots after sideloading.
.PP
sideload OTAPACKAGE sideload the given full OTA package
.PP
root restart adbd with root permissions
.PP
unroot restart adbd without root permissions
.PP
usb restart adbd listening on USB
.PP
tcpip PORT restart adbd listening on TCP on PORT
.SH INTERNAL DEBUGGING:
.TP
start-server
Ensure that there is a server running.
.TP
kill-server
Kill the server if it is running.
.TP
reconnect
Kick connection from host side to force reconnect.
.TP
reconnect device
Kick connection from device side to force reconnect.
.TP
reconnect offline
Reset offline/unauthorized devices to force reconnect.
.SH USB:
.PP
Only valid when running with libusb backend.
.TP
attach \f[I]SERIAL\f[R]
Attach a detached USB device.
.TP
detach \f[I]SERIAL\f[R]
Detach from a USB device to allow use by other processes.
.SH ENVIRONMENT VARIABLES
.PP
ADB_TRACE: Comma-separated list of debug info to log:
all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp
.PP
ADB_VENDOR_KEYS: Colon-separated list of keys (files or directories)
.PP
ANDROID_SERIAL: Serial number to connect to (see -s)
.PP
ANDROID_LOG_TAGS: Tags to be used by logcat (see logcat \[en]help)
.PP
ADB_LOCAL_TRANSPORT_MAX_PORT: Max emulator scan port (default 5585, 16
emus)
.PP
ADB_MDNS_AUTO_CONNECT: Comma-separated list of mdns services to allow
auto-connect (default adb-tls-connect)
.SH BUGS
.PP
See Issue Tracker: <https://issuetracker.google.com/components/192795>
.SH AUTHORS
.PP
See OWNERS file in ADB repo.
