{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d8152658_544e4614",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "(the idea seems good though!)",
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6d83ec1_06aad889",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:45:44Z",
      "side": 1,
      "message": "1. Unsure whether it\u0027s feasible, but any way to add a test for this?\n2. Can we please get a bug filed so we can track this change (and include a \u0027Bug:\u0027 field)?",
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b707fb8_018fa108",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T20:04:31Z",
      "side": 1,
      "message": "Pl ignore my comment about adding a bug.\nHowever (any) relevant test instructions/scripts (if applicable) would be much appreciated.",
      "parentUuid": "b6d83ec1_06aad889",
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af83cc1f_70463833",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-27T20:17:18Z",
      "side": 1,
      "message": "test case could see issue with: \nadb wait-for-device\nadb root\nadb wait-for-device\nadb pull /data/1GB_file c:\\temp\\\nadb devices -\u003e just to see offline happen or not\nadb reboot\n\nOR other use case is:\nadb pull /data/1GB_file c:\\temp\\ \n\nand on other cmd pmpt just ran: adb reconnect\n\nok will file bug.",
      "parentUuid": "b6d83ec1_06aad889",
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db07c74_92fb38e2",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Can we run clang-format (to get rid of \\t)?",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 1
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba38349_670ce9cd",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "(note that clang-format won\u0027t fix the \"new line or brace\" problem here, so you might also just want to fix all the formatting manually.)\n\nbut (as shaju points out later), if we\u0027re not logging (or CancelWrites() isn\u0027t normally called), we don\u0027t need this early exit, which i think is only to avoid logging the header before the loop if we\u0027re not actually going to go around the loop?",
      "parentUuid": "0db07c74_92fb38e2",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 1
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de704ad8_da63f945",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-27T20:17:18Z",
      "side": 1,
      "message": "Thanks for review.\n\nnext patchset I have incorporated 2 formatting with change.\n1. removing tab, and using space\n2. having braces for single line if condition body part",
      "parentUuid": "fba38349_670ce9cd",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 1
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c959da33_87c08fdf",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 688,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Can we scope these locals more narrowly?",
      "range": {
        "startLine": 687,
        "startChar": 5,
        "endLine": 688,
        "endChar": 25
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "329b5d6a_1a9b700a",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Do we need this local variable? Alternatively (if you\u0027re intending to scope the lock by making a copy), please move this to line #686 (and scope the lock inside {}).",
      "range": {
        "startLine": 689,
        "startChar": 12,
        "endLine": 689,
        "endChar": 20
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13387db8_20e56636",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-27T20:17:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "329b5d6a_1a9b700a",
      "range": {
        "startLine": 689,
        "startChar": 12,
        "endLine": 689,
        "endChar": 20
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ccb1ea7_d685889f",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Would the LOG(INFO) cause inordinate noise?",
      "range": {
        "startLine": 693,
        "startChar": 7,
        "endLine": 693,
        "endChar": 17
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b6976f1_0afbe318",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "which i think is really two questions:\n1. how often is CancelWrites() called? (and what\u0027s the _worst_ case?)\n2. how many writes are normally queued? (and what\u0027s the _max_?)",
      "parentUuid": "1ccb1ea7_d685889f",
      "range": {
        "startLine": 693,
        "startChar": 7,
        "endLine": 693,
        "endChar": 17
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a7f783_d8ce21a3",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-27T20:17:18Z",
      "side": 1,
      "message": "\u003e\u003e how often is CancelWrites() called? (and what\u0027s the _worst_ case?)\nShould happen when situation is seen of adb offline, and adbd server is just restarting adb session by closing fd, and reopening it.\n\n\u003e\u003e 2. how many writes are normally queued? (and what\u0027s the _max_?)\nADBD daemon is having 8 USB write/IN requests/buffers. So when issue is observed, all 8 USB write/IN requests/buffers are queued with USB controller.\n\nWithout adb offline issue also, if adb session is abrupted, and next CNXN is being received, seen 1 or 2 request pending. Specific use case involve: performing adb pull of huge file say 1 GB\n\nadb wait-for-device\nadb root\nadb wait-for-device\nadb pull /data/1GB_file c:\\temp\\\nadb devices\nadb reboot\n\nabove is one specific test case I ran to reproduce issue.",
      "parentUuid": "2b6976f1_0afbe318",
      "range": {
        "startLine": 693,
        "startChar": 7,
        "endLine": 693,
        "endChar": 17
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7127befa_fbabff7d",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 699,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "this pointer isn\u0027t meaningful to anyone reading the logs, right? should we just keep a count of how many succeeded and how many failed, and log _that_ at the end of the loop if either is non-zero?",
      "range": {
        "startLine": 699,
        "startChar": 71,
        "endLine": 699,
        "endChar": 77
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e57a75_bba815fb",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 700,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "i think this is wrong anyway, no? isn\u0027t res.res `-errno`? but i\u0027m guessing there\u0027s nothing useful to do with these errors anyway?",
      "range": {
        "startLine": 700,
        "startChar": 10,
        "endLine": 700,
        "endChar": 52
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82f5fa72_8b8a9714",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 700,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-27T20:17:18Z",
      "side": 1,
      "message": "io_cancel() invokes systemcall which is being invoking ffs_aio_cancel() API in kernel drivers/usb/gadget/function/f_fs.c\n\nffs_aio_cancel()\n  -\u003e usb_ep_dequeue()\n      -\u003e dwc3_gadget_ep_dequeue() (USB dwc3 controller/IP is used here)\n         -\u003e This API returns multiple values: -EINPROGRESS success (i.e. request is found) OR -EINVAL (even though it has started stopping usb controller endpoint, and giving back request/buffer back to f_fs.c driver\n                \nio_cancel() -\u003e return always -1 due to usb_ep_dqueue() return -EINVAL or -EINPROGRESS\n\nres.res is one updated with actual completion value.",
      "parentUuid": "a4e57a75_bba815fb",
      "range": {
        "startLine": 700,
        "startChar": 10,
        "endLine": 700,
        "endChar": 52
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46d2ea0e_b526077c",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 700,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T20:31:39Z",
      "side": 1,
      "message": "hmm... looks like we\u0027re both wrong, at least for current kernels?\n\nhttps://elixir.bootlin.com/linux/latest/source/fs/aio.c#L2176\n\nbut that makes it easier to just delete this code :-)",
      "parentUuid": "82f5fa72_8b8a9714",
      "range": {
        "startLine": 700,
        "startChar": 10,
        "endLine": 700,
        "endChar": 52
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}