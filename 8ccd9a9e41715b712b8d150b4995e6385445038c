{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d8152658_544e4614",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "(the idea seems good though!)",
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db07c74_92fb38e2",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Can we run clang-format (to get rid of \\t)?",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 1
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba38349_670ce9cd",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 685,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "(note that clang-format won\u0027t fix the \"new line or brace\" problem here, so you might also just want to fix all the formatting manually.)\n\nbut (as shaju points out later), if we\u0027re not logging (or CancelWrites() isn\u0027t normally called), we don\u0027t need this early exit, which i think is only to avoid logging the header before the loop if we\u0027re not actually going to go around the loop?",
      "parentUuid": "0db07c74_92fb38e2",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 1
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c959da33_87c08fdf",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 688,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Can we scope these locals more narrowly?",
      "range": {
        "startLine": 687,
        "startChar": 5,
        "endLine": 688,
        "endChar": 25
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "329b5d6a_1a9b700a",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Do we need this local variable? Alternatively (if you\u0027re intending to scope the lock by making a copy), please move this to line #686 (and scope the lock inside {}).",
      "range": {
        "startLine": 689,
        "startChar": 12,
        "endLine": 689,
        "endChar": 20
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ccb1ea7_d685889f",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-07-27T19:20:25Z",
      "side": 1,
      "message": "Would the LOG(INFO) cause inordinate noise?",
      "range": {
        "startLine": 693,
        "startChar": 7,
        "endLine": 693,
        "endChar": 17
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b6976f1_0afbe318",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "which i think is really two questions:\n1. how often is CancelWrites() called? (and what\u0027s the _worst_ case?)\n2. how many writes are normally queued? (and what\u0027s the _max_?)",
      "parentUuid": "1ccb1ea7_d685889f",
      "range": {
        "startLine": 693,
        "startChar": 7,
        "endLine": 693,
        "endChar": 17
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7127befa_fbabff7d",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 699,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "this pointer isn\u0027t meaningful to anyone reading the logs, right? should we just keep a count of how many succeeded and how many failed, and log _that_ at the end of the loop if either is non-zero?",
      "range": {
        "startLine": 699,
        "startChar": 71,
        "endLine": 699,
        "endChar": 77
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e57a75_bba815fb",
        "filename": "daemon/usb.cpp",
        "patchSetId": 2
      },
      "lineNbr": 700,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:38:11Z",
      "side": 1,
      "message": "i think this is wrong anyway, no? isn\u0027t res.res `-errno`? but i\u0027m guessing there\u0027s nothing useful to do with these errors anyway?",
      "range": {
        "startLine": 700,
        "startChar": 10,
        "endLine": 700,
        "endChar": 52
      },
      "revId": "8ccd9a9e41715b712b8d150b4995e6385445038c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}