{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02b2e9ad_208361c8",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "(a) you don\u0027t have to do this because it\u0027s already in your TearDown(), but...\n\n(b) i don\u0027t think that RestartServiceTest is buying us anything here. (as demonstrated by \"it confused even you, the author, at the time you added it\". that\u0027s not going to get any better over time/more authors!)\n\njust delete RestartServiceTest, have a unique_fd in each individual test, and stop calling reset() completely (since the whole point of unique_fd is \"i\u0027ll take care of that for you when i go out of scope\")?",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a60948_7b47d7e5",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:15:09Z",
      "side": 1,
      "message": "I was following the existing blueprint (shell-service).\nGlad to gut it, however should I refactor out shell-service (as a followup CL) as well?",
      "parentUuid": "02b2e9ad_208361c8",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5242f465_61098b08",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "i think we can be more specific than this?",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 13
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1693e344_a97abc93",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:15:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5242f465_61098b08",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 13
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abae2a59_8d4c41b5",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "don\u0027t we already have a couple of copies of this lying around?",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca168c00_ace7caa0",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T16:04:39Z",
      "side": 1,
      "message": "Will refactor this out in a followup CL (in the interest of keeping CLs limited in scope)/",
      "parentUuid": "abae2a59_8d4c41b5",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be72885_d9bc3e9c",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:08:26Z",
      "side": 1,
      "message": "remember the blog post (https://publicobject.com/2023/01/08/small-or-mechanical/) --- we always want to make those kinds of changes _first_.\n\nno change is perfect, right, but each change should be moving us in a healthier direction. reducing rather than increasing debt.",
      "parentUuid": "ca168c00_ace7caa0",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9700f1c_ecab0b2c",
        "filename": "daemon/test_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:08:26Z",
      "side": 1,
      "message": "(fwiw, given that this is a _bad_ idea -- but also your least worst option until/unless we improve the API to be more conveniently testable -- i don\u0027t think we should automatically expose this so broadly. just hide it in the one _test.cpp that needs it for now, unless you already know of other tests that need this?)",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}