{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02b2e9ad_208361c8",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "(a) you don\u0027t have to do this because it\u0027s already in your TearDown(), but...\n\n(b) i don\u0027t think that RestartServiceTest is buying us anything here. (as demonstrated by \"it confused even you, the author, at the time you added it\". that\u0027s not going to get any better over time/more authors!)\n\njust delete RestartServiceTest, have a unique_fd in each individual test, and stop calling reset() completely (since the whole point of unique_fd is \"i\u0027ll take care of that for you when i go out of scope\")?",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a60948_7b47d7e5",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:15:09Z",
      "side": 1,
      "message": "I was following the existing blueprint (shell-service).\nGlad to gut it, however should I refactor out shell-service (as a followup CL) as well?",
      "parentUuid": "02b2e9ad_208361c8",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4957c2c8_3fdfee65",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:18:41Z",
      "side": 1,
      "message": "i don\u0027t think so ... that one\u0027s doing more. i\u0027ve only had a quick glance, but that one seems like it\u0027s probably actually useful? in particular, although i personally might just have static functions rather than member functions that don\u0027t [seem] to need to actually be members, the signal stuff is something that isn\u0027t otherwise naturally part of the test. that would be extra unrelated lines of boilerplate you\u0027d need to add to every test.\n\nthe difference here is that the unique_fd is just the natural way to write the test anyway --- we\u0027re calling a function that returns an fd, so _of course_ it goes into a unique_fd because that\u0027s the default holder for an fd. and we literally don\u0027t need to write anything else. job done!",
      "parentUuid": "54a60948_7b47d7e5",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf83d1ac_d40badd6",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:57:16Z",
      "side": 1,
      "message": "Done\nPS: shell-service test appears to suffer from tech-debt (maintaining state across independent tests).\n\"Tests should be independent and repeatable. It\u0027s a pain to debug a test that succeeds or fails as a result of other tests. googletest isolates the tests by running each of them on a different object. When a test fails, googletest allows you to run it in isolation for quick debugging.\"\nRef: https://g3doc.corp.google.com/third_party/googletest/g3doc/primer.md?cl\u003dhead",
      "parentUuid": "4957c2c8_3fdfee65",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50494c56_0717b70c",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T18:07:21Z",
      "side": 1,
      "message": "yeah, i suspect that was a typo/confusion between SetUpTestCase() and Setup()... doesn\u0027t make sense to have scoped that across _all_ the tests rather than per-test. the rest seems fine though?",
      "parentUuid": "bf83d1ac_d40badd6",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5242f465_61098b08",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "i think we can be more specific than this?",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 13
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1693e344_a97abc93",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:15:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5242f465_61098b08",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 13
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abae2a59_8d4c41b5",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T15:57:20Z",
      "side": 1,
      "message": "don\u0027t we already have a couple of copies of this lying around?",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca168c00_ace7caa0",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T16:04:39Z",
      "side": 1,
      "message": "Will refactor this out in a followup CL (in the interest of keeping CLs limited in scope)/",
      "parentUuid": "abae2a59_8d4c41b5",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be72885_d9bc3e9c",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:08:26Z",
      "side": 1,
      "message": "remember the blog post (https://publicobject.com/2023/01/08/small-or-mechanical/) --- we always want to make those kinds of changes _first_.\n\nno change is perfect, right, but each change should be moving us in a healthier direction. reducing rather than increasing debt.",
      "parentUuid": "ca168c00_ace7caa0",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce8d0a75_3df11a89",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T17:20:58Z",
      "side": 1,
      "message": "I did keep this article in mind.\nHowever I figured I could make the desired-change first, and *then* refactor (conversely, it\u0027ll be hard to justify the refactor *before* the fact - now there is context).",
      "parentUuid": "9be72885_d9bc3e9c",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9640df2_9555712d",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:24:19Z",
      "side": 1,
      "message": "eh, \"i have another test that needs to use this test helper\" isn\u0027t a difficult sell.\n\n(we also have this function already in libcutils [https://source.corp.google.com/android/system/core/libcutils/sockets.cpp;l\u003d34?q\u003dfile:libcutils%20ntohs\u0026sq\u003dpackage:%5Eandroid$%20-file:prebuilts%2Fvndk%2F%20-file:prebuilts%2Fruntime%2F] just unfortunately not in a way that supports Windows too, afaict.)",
      "parentUuid": "ce8d0a75_3df11a89",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4702f9f1_bc4fb94e",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-23T18:00:38Z",
      "side": 1,
      "message": "What would you like me to do?\nOption 1.) Refactor out test_utils for use across multiple tests (possibly include some platform-specific code).\nOption 2.) Repurpose socket_get_local_port() for test use (as well).",
      "parentUuid": "a9640df2_9555712d",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a7c24e7_95d378c5",
        "filename": "daemon/test_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T18:11:08Z",
      "side": 1,
      "message": "2 seems hard?\n\noh, no, i hadn\u0027t realize that this test is already not really using the adb functions --- yeah, in that case, you can just delete this and call socket_get_local_port() directly, since you\u0027re already using socket_inaddr_any_server() and socket_close() rather than adb_* functions...",
      "parentUuid": "4702f9f1_bc4fb94e",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 113,
        "endChar": 5
      },
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9700f1c_ecab0b2c",
        "filename": "daemon/test_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T17:08:26Z",
      "side": 1,
      "message": "(fwiw, given that this is a _bad_ idea -- but also your least worst option until/unless we improve the API to be more conveniently testable -- i don\u0027t think we should automatically expose this so broadly. just hide it in the one _test.cpp that needs it for now, unless you already know of other tests that need this?)",
      "revId": "8c451f85262fea702cb059708c100a999c72694a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}