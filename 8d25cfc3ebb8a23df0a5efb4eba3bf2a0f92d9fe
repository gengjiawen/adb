{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5078ca3_6349787b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:18:43Z",
      "side": 1,
      "message": "d\u0027oh! now i\u0027m wondering why this hasn\u0027t had _worse_ effects? are most people just \"always allow\", and so they don\u0027t hit this?",
      "revId": "8d25cfc3ebb8a23df0a5efb4eba3bf2a0f92d9fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cf3ae7b_59327c30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2022-07-27T21:26:59Z",
      "side": 1,
      "message": "I am able to repro this bug with and without checking \"always allow\" in the GUI dialog.\n\nMy best guess is that some libraries don\u0027t care about duplicates. In the case of DDMLib for example, after issuing a `track-devices` command (https://cs.android.com/android/platform/superproject/+/master:tools/base/ddmlib/src/main/java/com/android/ddmlib/DeviceMonitor.java;l\u003d65), they use a map keyed on `device serial` to store updates which collapse the duplicates (https://cs.android.com/android/platform/superproject/+/master:tools/base/ddmlib/src/main/java/com/android/ddmlib/DeviceMonitor.java;l\u003d850).",
      "parentUuid": "a5078ca3_6349787b",
      "revId": "8d25cfc3ebb8a23df0a5efb4eba3bf2a0f92d9fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c54d1b1_3c9f2ad8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-27T19:18:43Z",
      "side": 1,
      "message": "i think just \"manual\" is fine for now. clear regression that actual users are hitting... let\u0027s just get this fixed and in the next release and worry about a test later? (unless you actually have a specific _plan_ for how you\u0027d test this. but i\u0027m assuming it\u0027ll be non-trivial, given that you want devices connecting and disconnecting, and we don\u0027t have any unit test infrastructure for testing that kind of thing.)",
      "revId": "8d25cfc3ebb8a23df0a5efb4eba3bf2a0f92d9fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aefcd56_c9094336",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2022-07-27T21:26:59Z",
      "side": 1,
      "message": "I can leverage `detach` and `attach` service. When I `attach` after a `detach`, I do see a CNXN packet which results in a call to `handle_new_connection` and `track-devices` is triggered for a refresh.\n\n1/ The issue is that the test needs to run with `export ADB_LIBUSB\u003d1`. I have not yet established if that is the case or if I can even request it in integration tests running on presubmit.\n\n2/ It may take me a little bit to get up to speed on tests writing. I propose that we submit this CL as is and I write a follow up test CL using `detach`/`attach`.",
      "parentUuid": "2c54d1b1_3c9f2ad8",
      "revId": "8d25cfc3ebb8a23df0a5efb4eba3bf2a0f92d9fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}