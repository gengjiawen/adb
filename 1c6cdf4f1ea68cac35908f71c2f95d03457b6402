{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ba93c846_47c7cc6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-06T18:29:14Z",
      "side": 1,
      "message": "i thought you were going to just do track-devices (since it\u0027s a superset of devices), but add both text and binary to it (binary for tools, text for debugging)?\n\ni\u0027m uncomfortable with the idea of \"whether you get text or binary depends on who you ask\", and i still think _all_ the protobuf choices should be longopts (\u0027--text-protobuf\u0027) because they\u0027re not worth burning precious shortopts (\u0027-p\u0027) on for something that will mainly be hard-coded in a tool and otherwise only used for occasional debugging.\n\n(if we were explicitly saying --text-protobuf and --binary-protobuf i\u0027d be a bit less bothered by the difference, since at least in that world we could add the missing one of each pair later without ending up in a bizarre situation in terms of what the exact option to do that is. but i still prefer the \"yagni\" option for devices... i\u0027m just not seeing the real-world use case, and even for your debugging case, i think you\u0027re better off with track-devices supporting both.)",
      "revId": "1c6cdf4f1ea68cac35908f71c2f95d03457b6402",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3bcf44a_7c2570e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-06T19:50:42Z",
      "side": 1,
      "message": "1/ Having `devices -p` is convenient and easier to read than the `-l` output, not to mention it features more info. This is what I use all the time now that i have it. Having to resort to `track-devices -p` is annoying because I need to Control-C right after to get out. We need both.\n\nHowever I agree `-p` is confusing so I changed `-p` in `track-devices -p` to `track-devices -x` to avoid confusion with `devices -p`.\n\n2/ I agree that shortopts are precious but what are the criteria to assess when it is ok to burn one? Every CL author (me) is going to say it is useful and every reviewer (you) is going to say it is not useful enough. The `devices` commands has a single shortopt now, I think it is ok to add a second one. We are far from making a dent in the number of available ones. I don\u0027t mind having a longopts for `track-devices` since it is for tools but `devices` is meant to be used often and should have a shortopt (-p). Let me know if you really want `track-devices -x` to be `track-devices --binary-protobuf` instead.\n\n3/ I don\u0027t want to add commands/services unless there is an intended usage for it. Like `track-devices --protobuffer-text`: what tool is going to use that? Same with `devices --protobuffer-binary`. Nobody is going to use this either.",
      "parentUuid": "ba93c846_47c7cc6e",
      "revId": "1c6cdf4f1ea68cac35908f71c2f95d03457b6402",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "410c0a95_0ed8e85d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1076798
      },
      "writtenOn": "2023-12-06T20:32:59Z",
      "side": 1,
      "message": "I think it\u0027d be less annoying if it wasn\u0027t obnoxiously long to type, e.g. `--proto[\u003dtext|binary]`, defaulting to text if you don\u0027t specify.\n\nOr just only support text? Do all of the important proto parsing libraries support text proto? If so, it\u0027s not like bandwidth or parsing speed for this actually matters to parse dozens of bytes every time a device connects/leaves.",
      "parentUuid": "b3bcf44a_7c2570e2",
      "revId": "1c6cdf4f1ea68cac35908f71c2f95d03457b6402",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f7a45d_6ae87756",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-06T22:58:52Z",
      "side": 1,
      "message": "\u003e However I agree -p is confusing so I changed -p in track-devices -p to track-devices -x to avoid confusion with devices -p.\n\nthat\u0027s far worse!\n\nyou\u0027re really not doing a good job of selling _any_ changes to devices... even a `--one-shot` option to track-devices is sounding less silly at the moment!\n\n\u003e 2/ I agree that shortopts are precious but what are the criteria to assess when it is ok to burn one?\n\nit\u0027s certainly a \"default no\" --- this combines with your \"Having devices -p is convenient and easier to read than the -l output, not to mention it features more info\" to lead into our usual git-like conversation about plumbing versus porcelain. it\u0027s like larry\u0027s \"toothbrush test\" ... does everyone need this every day? otherwise it\u0027s \"why does this have to be in adb?\". in particular: \"you can put whatever you like in your .bashrc\".\n\n\u003e Or just only support text? Do all of the important proto parsing libraries support text proto? If so, it\u0027s not like bandwidth or parsing speed for this actually matters to parse dozens of bytes every time a device connects/leaves.\n\nyeah, \"we only support text protobufs\" was one of my other suggestions: humans need it, and machines don\u0027t care (for the things we\u0027re talking about). and if/when we\u0027re doing other stuff with protobufs and _do_ care, the `--proto[\u003dtext|binary]` style gives us a nice ready-made escape hatch.\n\n(the fact that, when you think about it, text is the obvious default feels like more circumstantial evidence in favor of all text, all the time...)",
      "parentUuid": "410c0a95_0ed8e85d",
      "revId": "1c6cdf4f1ea68cac35908f71c2f95d03457b6402",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}