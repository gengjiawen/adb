{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "95f6b54d_0c60f15b",
        "filename": "adb_utils_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-18T15:51:44Z",
      "side": 1,
      "message": "what symlink above?\n\ni think the point of this test and the one on L81 were for \"not a directory\" cases --- so you want to find another symlink to use here, and another junction (whatever that is) for L81, if these are no longer symlinks/junctions?",
      "range": {
        "startLine": 74,
        "startChar": 60,
        "endLine": 74,
        "endChar": 80
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95a0ae16_de2567c4",
        "filename": "adb_utils_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-07-18T22:30:36Z",
      "side": 1,
      "message": "\u003e\u003ewhat symlink above?\nWhatever is referred to in lines 71-73 (I\u0027m unfamiliar with the junction concept myself).\n\nIt\u0027s unclear to me why different junction(s) need to be picked? Because I\u0027m not sure whether this test *ever* succeeded, and if so when did it start failing (OS release, service pack release?). \nEspecially since the test name reads \"directory_exists\u003c\u003e\" (vs \"directory_does_not_exist\u003c\u003e\").\nI shall try to experiment with other non-directory objects - pl stay tuned (leaving this comment thread open).",
      "parentUuid": "95f6b54d_0c60f15b",
      "range": {
        "startLine": 74,
        "startChar": 60,
        "endLine": 74,
        "endChar": 80
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "491b6633_1597def9",
        "filename": "adb_utils_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-18T22:50:09Z",
      "side": 1,
      "message": "\u003e the test name reads directory_exists\n\nsure, but it said `EXPECT_FALSE()` ... it\u0027s quite normal to have negative tests too. (otherwise, for example, `bool IsDir(const std::string\u0026 path) { return true; }` would pass the tests!)\n\ndid you check the git history?",
      "parentUuid": "95a0ae16_de2567c4",
      "range": {
        "startLine": 74,
        "startChar": 60,
        "endLine": 74,
        "endChar": 80
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed93ae9c_581c181f",
        "filename": "adb_utils_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-08-01T20:40:47Z",
      "side": 1,
      "message": "(don\u0027t forget this one.)",
      "parentUuid": "491b6633_1597def9",
      "range": {
        "startLine": 74,
        "startChar": 60,
        "endLine": 74,
        "endChar": 80
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7bac6a6_7764e3e3",
        "filename": "adb_utils_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-08-01T21:30:21Z",
      "side": 1,
      "message": "I\u0027ve an AI to discuss this with you when we meet today (so didn\u0027t forget, which is why I left this one unresolved :)",
      "parentUuid": "ed93ae9c_581c181f",
      "range": {
        "startLine": 74,
        "startChar": 60,
        "endLine": 74,
        "endChar": 80
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a62cd00a_808929d0",
        "filename": "fdevent/fdevent_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-18T15:51:44Z",
      "side": 1,
      "message": "right, so that\u0027s a configuration error. is the _hard_ limit too low (i.e. \"can you just fix this with a `setrlimit(RLIMIT_NOFILE)`, or should you stop and tell people to fix their mac configuration [iirc there\u0027s some file that lets you increase this persistently, that we tell people to use for macs they\u0027re building on])?",
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a46de50_289aa8cf",
        "filename": "fdevent/fdevent_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-07-19T01:11:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a62cd00a_808929d0",
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a91a60b_29d1602c",
        "filename": "fdevent/fdevent_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 407,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-18T15:51:44Z",
      "side": 1,
      "message": "what resource is constrained?",
      "range": {
        "startLine": 407,
        "startChar": 59,
        "endLine": 407,
        "endChar": 90
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d0919b6_72b7794a",
        "filename": "fdevent/fdevent_test.cpp",
        "patchSetId": 6
      },
      "lineNbr": 407,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-07-18T22:30:36Z",
      "side": 1,
      "message": "Dropped that part (in the interest of salvaging a completely broken test, deferring to skipping the test - in the interest of time).\nPS: Glad to open a bug to investigate the underlying root-cause for poll() failure on _WIN32, however I feel it should be a separate task(dependency).",
      "parentUuid": "0a91a60b_29d1602c",
      "range": {
        "startLine": 407,
        "startChar": 59,
        "endLine": 407,
        "endChar": 90
      },
      "revId": "707c3f79895b831b7f72be044331f1ae7ec206f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}