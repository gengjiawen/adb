{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cbba4153_230cd0b0",
        "filename": "SERVICES.TXT",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "definitely worth being clearer about the _content_ differences in this doc.",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80ceb57c_f4b98b45",
        "filename": "SERVICES.TXT",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbba4153_230cd0b0",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ec476d9_3adaf389",
        "filename": "SERVICES.TXT",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "no it\u0027s not :-)",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b758801d_783aa665",
        "filename": "SERVICES.TXT",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Sorry :(. Thank you.",
      "parentUuid": "3ec476d9_3adaf389",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47f2975_4e678afd",
        "filename": "adb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1329,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "(everything else here seems to be output_type style?)",
      "range": {
        "startLine": 1329,
        "startChar": 26,
        "endLine": 1329,
        "endChar": 36
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec183e98_a5663a40",
        "filename": "adb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1329,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a47f2975_4e678afd",
      "range": {
        "startLine": 1329,
        "startChar": 26,
        "endLine": 1329,
        "endChar": 36
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fd30489_03ebde5a",
        "filename": "adb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1333,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "this actually gets you LONG_TEXT_PROTOBUF, no? (i\u0027d also be fine with FULL_TEXT_PROTOBUF or just PROTOBUF, or renaming the exiting TEXT to SHORT_TEXT. i just don\u0027t like the way this looks like it\u0027s a protobuf version of the short text form. the more i think about it, the more i like s/TEXT/SHORT_TEXT/!)",
      "range": {
        "startLine": 1333,
        "startChar": 25,
        "endLine": 1333,
        "endChar": 38
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8edc4f27_72db5990",
        "filename": "adb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1333,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "OK with `s/TEXT/SHORT_TEXT/`.",
      "parentUuid": "4fd30489_03ebde5a",
      "range": {
        "startLine": 1333,
        "startChar": 25,
        "endLine": 1333,
        "endChar": 38
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1024190f_b6abe155",
        "filename": "client/commandline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "whitespace\n\n(POSIX and man pages would write this as `[-lp]` --- do we have existing precedent for this unusual form for short options?)",
      "range": {
        "startLine": 104,
        "startChar": 34,
        "endLine": 104,
        "endChar": 38
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9addf0b2_d3192b80",
        "filename": "client/commandline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "1024190f_b6abe155",
      "range": {
        "startLine": 104,
        "startChar": 34,
        "endLine": 104,
        "endChar": 38
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ecdf09c_04d6a4e1",
        "filename": "client/commandline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2069,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "if they\u0027re so similar (and meant to stay the same), should this case be merged with \"devices\"?",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03c21dd9_00481a17",
        "filename": "client/commandline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2069,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Agreed. But this is already a big CL. I would gladly refactor but in another CL.",
      "parentUuid": "0ecdf09c_04d6a4e1",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddf07ca0_6af656b1",
        "filename": "client/commandline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2069,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T21:59:53Z",
      "side": 1,
      "message": "(fair enough.)",
      "parentUuid": "03c21dd9_00481a17",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbc3447_5c2e5422",
        "filename": "client/usb_libusb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 496,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "(yeah, these two functions are strengthening my \"can\u0027t we just use what libusb uses?\" conviction.)",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d05b12a_420148dd",
        "filename": "client/usb_libusb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 496,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Discussed in comments on transport.h:146",
      "parentUuid": "4cbc3447_5c2e5422",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db2802c_7ba5636a",
        "filename": "client/usb_libusb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 546,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "or `if (!libusb_get_bos_descriptor(device_handle_.get(), \u0026bos)) return;` and avoid a local we don\u0027t use and a level of indentation... (is there a reason you don\u0027t report failure if this fails?)",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1265233_84087f34",
        "filename": "client/usb_libusb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 546,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done with code suggestion.\n\nWRT error: What can we do if it fails? The failure is reported since the value will be set to `UNKNOWN`. I though you wanted to avoid too much logging. Let me know if you want it in `LOG_V` for now, marking as resolved.",
      "parentUuid": "1db2802c_7ba5636a",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "386e97e9_03945be0",
        "filename": "client/usb_libusb.cpp",
        "patchSetId": 7
      },
      "lineNbr": 546,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T21:59:53Z",
      "side": 1,
      "message": "yeah, this seems \"fine unless proven otherwise\" --- i just wanted to check you\u0027d actually _thought_ about this, rather than forgotten to come back and write the `else`. (that\u0027s another reason why i prefer to \"return early\"; it makes my \"yeah, nothing else to do here then\" intention clearer. _and_ saves me a level of indentation :-) )",
      "parentUuid": "d1265233_84087f34",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f559bde_e4ae4137",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "out of date (and see my earlier POSIX/man comment)",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71db2c40_9e35801e",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f559bde_e4ae4137",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "311a8bf6_64b7791b",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "out of date",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1893600_398f31cf",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "311a8bf6_64b7791b",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e342def_6af19443",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "worth saying what that contains?",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f58a5909_27b5f789",
        "filename": "docs/user/adb.1.md",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done. Added an example.",
      "parentUuid": "5e342def_6af19443",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa41a8a_0a21d3d3",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "(these names should probably match the names in the other file...)",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70506ba4_ea44248b",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "I don\u0027t get it. The enum? Or the service name? What other file do you mean?",
      "parentUuid": "ffa41a8a_0a21d3d3",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "960ab7b3_326c1921",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T21:59:53Z",
      "side": 1,
      "message": "the enum --- it\u0027s weird that it\u0027s TEXT_PROTOBUF in one file but PROTOBUF in another.",
      "parentUuid": "70506ba4_ea44248b",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "758fb4bf_2f27286a",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T22:07:36Z",
      "side": 1,
      "message": "I assume you mean device-p issues TEXT_PROTOBUF whereas track-devices-p issues PROTOBUF. That is deliberate. \n\n- track-devices-p is meant for tools which will obviously want to see binary protobuf output. \n\n- devices-p is meant for CLI human reader. If I have any issues with this features, I can ask users to run this command and tell me what they see (you can\u0027t do that with protobuffer). I also found it very convenient to be able to do a rapid check with my configuration by running `adb devices -p` and check the speed visually.",
      "parentUuid": "960ab7b3_326c1921",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3c560c5_832a5656",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T22:26:57Z",
      "side": 1,
      "message": "/me wonders whether we should always offer both text and binary protobufs? i like text because i can read it, but i accept that tools are more likely to want binary. (and unfortunately we already offered a binary one, so we can\u0027t just switch to \"always text protobufs\" now.)",
      "parentUuid": "758fb4bf_2f27286a",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7b650eb_dea28ceb",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-02T03:07:24Z",
      "side": 1,
      "message": "Haha. I originally had both text and binary for both `device-` and `track-device`. And then I told myself, \"I bet enh will recommend to only add code that we actually use\", so I deleted it.\n\nSo my take on that is that, as you mentioned, tools will always want PROTOBUF (why would they want TEXT_PROTOBUF which is more verbose and use more bandwidth?). Likewise, when I run `adb device -p`, I always expect to be able to read it. I cannot imagine a time wanting to see binary PROTOBUF in my CLI output.",
      "parentUuid": "e3c560c5_832a5656",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e72394e_3eef1fb1",
        "filename": "services.cpp",
        "patchSetId": 7
      },
      "lineNbr": 257,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-04T22:25:23Z",
      "side": 1,
      "message": "ah, and _track-devices_ \"-p\" isn\u0027t actually exposed at the command-line --- you have to use the protocol directly for that.\n\nthat\u0027s less bad... i think my main concern was precedent, and getting into a position where the _command-line_ meaning of \"protobuf\" depends on the specific command.\n\nif this is the first command where we\u0027re adding a protobuf option, let\u0027s just go straight for --text-protobuf to reduce the chances of us painting ourselves into a weird corner for the future. because i actually can see a use for both --- i\u0027d certainly rather a new tool used the protobuf format than parsing any of the existing ones, for example. and i can imagine someone debugging wanting to translate binary protobuf output into text protobuf output. (i\u0027m assuming protobuf has its own command-line tool for that? which is maybe an argument for only ever outputting binary protobufs, and letting anyone wanting to debug stuff pipe into the protobuf tool? but that\u0027s presumably a PITA if you\u0027re testing on Windows...)",
      "parentUuid": "a7b650eb_dea28ceb",
      "range": {
        "startLine": 257,
        "startChar": 37,
        "endLine": 257,
        "endChar": 45
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8691882_866a7cd8",
        "filename": "sockets.cpp",
        "patchSetId": 7
      },
      "lineNbr": 883,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "StringPrintf() would be more idiomatic\n\n(but note that in cases where you really do want string concatenation for some reason, https://en.cppreference.com/w/cpp/string/basic_string/operator%22%22s is your friend.)",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e182e43_19d5124c",
        "filename": "sockets.cpp",
        "patchSetId": 7
      },
      "lineNbr": 883,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Neither of these play nicely with `string_view`. My understanding is that string_view are not necessarily null-terminated.\n\nThis rules out `StringPrintf`.\n\nAnd there is no concatenation operator between `string` and `string_view`. Although, it may come someday (https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2591r2.html).",
      "parentUuid": "f8691882_866a7cd8",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af469796_1523e5d2",
        "filename": "sockets.cpp",
        "patchSetId": 7
      },
      "lineNbr": 883,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T21:59:53Z",
      "side": 1,
      "message": "ah, i didn\u0027t realize it was a std::string_view. in that case, i probably _would_ use \"\"s here!",
      "parentUuid": "0e182e43_19d5124c",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a4dbcf6_95ffa1f8",
        "filename": "transport.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1340,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "bug?",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "108e1ca2_8d7c75bd",
        "filename": "transport.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1340,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Not a bug since I was calling it with `outputType \u003d\u003d TEXT`. And the unit tests I wrote for this CL passed.\n\nRather a very bad name choice 😊!\n\nDone",
      "parentUuid": "4a4dbcf6_95ffa1f8",
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d7effbd_5caa8d44",
        "filename": "transport.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-01T18:35:07Z",
      "side": 1,
      "message": "unnecessary",
      "range": {
        "startLine": 1450,
        "startChar": 8,
        "endLine": 1452,
        "endChar": 9
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a383bb5f_96fa2d83",
        "filename": "transport.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-12-01T21:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d7effbd_5caa8d44",
      "range": {
        "startLine": 1450,
        "startChar": 8,
        "endLine": 1452,
        "endChar": 9
      },
      "revId": "ed00d8e09023b5798384730bbb9b79c906219b33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}