{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f7678e76_0ce6a2e3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-28T20:00:56Z",
      "side": 1,
      "message": "there\u0027s something missing here, right? it\u0027s the _next_ adb command that fails without this patch?",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc27bb97_f05b7fcd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-28T20:29:14Z",
      "side": 1,
      "message": "It fails at adb pull 1GB file. so next adb reboot command won\u0027t work. and querying adb status adb devices fails.\n\nReason as: adbd server on host tries to restart adbd session by closing fd, and reopening fd, sending cnxn. As no one flushing out pending IN buffers on device side. so device side adbd is running out of buffer to queue CNXN response.\n\nThis issue can recover with adb kill-server, and adb start-server which needs user intervention. so this change is prepared to allow recovery without user intervention.\n\nBelow is adbd server side logs when issue is seen:\nadb D 07-01 14:06:42  9752  8596 transport.cpp:1216] 43a9cb8f: from remote: [WRTE] arg0\u003d48 arg1\u003d0x231 (len\u003d77) 014800000030372d30312031343a3036 .H...07-01 14:06 [truncated]\nadb D 07-01 14:06:42  9752   732 adb.cpp:404] handle_packet() WRTE\nadb D 07-01 14:06:42  9752  8596 transport_usb.cpp:45] UsbReadMessage\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:391] usb_read 1024\nadb D 07-01 14:06:42  9752   732 adb.cpp:540] Enqueue the socket\nadb D 07-01 14:06:42  9752   732 adb.cpp:238] Calling send_ready\nadb D 07-01 14:06:42  9752   732 transport.cpp:561] 43a9cb8f: to remote: [OKAY] arg0\u003d0x231 arg1\u003d48 (len\u003d0)\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:405] usb_read got: 24, expected: 1024\nadb D 07-01 14:06:42  9752  8596 transport_usb.cpp:68] UsbReadPayload(199268)\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:333] usb_write 24\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:391] usb_read 199680\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:350] usb_write got: 24, expected: 24\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:401] AdbReadEndpointSync failed: A device attached to the system is not functioning. (31)\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:417] Kicking device due to error in usb_read\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:464] usb_kick\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:435] usb_cleanup_handle\nadb D 07-01 14:06:42  9752  8596 usb_windows.cpp:421] usb_read failed\nadb D 07-01 14:06:42  9752  8596 transport_usb.cpp:113] remote usb: terminated (data)\nadb I 07-01 14:06:42  9752  8596 transport.cpp:336] 43a9cb8f: read failed: Input/output error\nadb I 07-01 14:06:42  9752  8596 transport.cpp:1225] 43a9cb8f: connection terminated: read failed\nadb I 07-01 14:06:42  9752   732 adb.cpp:175] 43a9cb8f: offline\nadb D 07-01 14:06:42  9752   732 transport.cpp:561] 43a9cb8f: to remote: [CLSE] arg0\u003d0x231 arg1\u003d48 (len\u003d0)\nadb D 07-01 14:06:42  9752   732 transport.cpp:561] 43a9cb8f: to remote: [CLSE] arg0\u003d0x234 arg1\u003d49 (len\u003d0)\nadb D 07-01 14:06:42  9752   732 transport.cpp:561] 43a9cb8f: to remote: [CLSE] arg0\u003d0x23b arg1\u003d54 (len\u003d0)\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:333] usb_write 24\nadb I 07-01 14:06:42  9752   732 transport.cpp:910] destroying transport 43a9cb8f\nadb I 07-01 14:06:42  9752   732 transport.cpp:404] BlockingConnectionAdapter(43a9cb8f): stopping\nadb D 07-01 14:06:42  9752   732 usb_windows.cpp:464] usb_kick\nadb D 07-01 14:06:42  9752   732 usb_windows.cpp:435] usb_cleanup_handle\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:344] AdbWriteEndpointSync failed: The handle is invalid. (6)\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:376] Kicking device due to error in usb_write\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:464] usb_kick\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:435] usb_cleanup_handle\nadb D 07-01 14:06:42  9752  4144 usb_windows.cpp:380] usb_write failed\nadb E 07-01 14:06:42  9752  4144 transport_usb.cpp:166] remote usb: 1 - write terminated: Input/output error\nadb I 07-01 14:06:42  9752   732 transport.cpp:422] BlockingConnectionAdapter(43a9cb8f): stopped\nadb D 07-01 14:06:42  9752   732 transport.cpp:924] transport: 43a9cb8f destroy (kicking and closing)\nadb D 07-01 14:06:42  9752   732 transport.cpp:899] transport: 43a9cb8f removed\nadb D 07-01 14:06:42  9752   732 transport.cpp:792] transport: 43a9cb8f deleting\nadb I 07-01 14:06:42  9752   732 transport.cpp:291] BlockingConnectionAdapter(43a9cb8f): destructing\nadb I 07-01 14:06:42  9752   732 transport.cpp:397] BlockingConnectionAdapter(43a9cb8f): already stopped\nadb D 07-01 14:06:42  9752   732 usb_windows.cpp:474] usb_close\nadb D 07-01 14:06:42  9752   732 usb_windows.cpp:435] usb_cleanup_handle\nadb D 07-01 14:06:43  9752  9272 usb_windows.cpp:532] device zero_mask: 0x3ff\nadb D 07-01 14:06:43  9752  9272 usb_windows.cpp:564] adding a new device \\\\?\\usb#vid_05c6\u0026pid_90db\u0026mi_05#6\u002622d9acd8\u00260\u00260005#{f72fe0d4-cbcb-407d-8814-9ed673d0dd6b}\nadb W 07-01 14:06:43  9752   732 sockets.cpp:279] timeout expired while flushing socket, closing\nadb W 07-01 14:06:43  9752   732 sockets.cpp:279] timeout expired while flushing socket, closing\nadb W 07-01 14:06:43  9752   732 sockets.cpp:279] timeout expired while flushing socket, closing\nadb D 07-01 14:06:43  9752  9272 transport.cpp:1568] transport: 00e998f8 init\u0027ing for usb_handle 00ea09d8 (sn\u003d\u002743a9cb8f\u0027)\nadb D 07-01 14:06:43  9752  9272 transport_usb.cpp:194] transport: usb\nadb D 07-01 14:06:43  9752  9272 transport.cpp:889] transport: 43a9cb8f registered\nadb D 07-01 14:06:43  9752   732 adb.cpp:290] Calling send_connect\nadb D 07-01 14:06:43  9752   732 transport.cpp:561] 43a9cb8f: to remote: [CNXN] arg0\u003d0x1000001 arg1\u003d0x100000 (len\u003d234) 686f73743a3a66656174757265733d73 host::features\u003ds [truncated]\nadb I 07-01 14:06:43  9752  6844 transport.cpp:304] 43a9cb8f: write thread spawning\nadb I 07-01 14:06:43  9752  1124 transport.cpp:332] 43a9cb8f: read thread spawning\nadb D 07-01 14:06:43  9752  6844 usb_windows.cpp:333] usb_write 24",
      "parentUuid": "f7678e76_0ce6a2e3",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "639c9603_5c5c981b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-28T22:15:44Z",
      "side": 1,
      "message": "\u003e It fails at adb pull 1GB file. so next adb reboot command won\u0027t work. and querying adb status adb devices fails.\n\nwait? you\u0027re telling me you can\u0027t pull a 1GiB file without issue?",
      "parentUuid": "fc27bb97_f05b7fcd",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f8d819f_497bf165",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-28T23:35:43Z",
      "side": 1,
      "message": "It is hard to reproduce this issue, but when it happened this is being seen.",
      "parentUuid": "639c9603_5c5c981b",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912cde1b_adc67eed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-28T23:42:28Z",
      "side": 1,
      "message": "okay, lets replace \"pull 1GB file\" with \"\u003csomething that causes adb to crash\u003e\", since otherwise this comment isn\u0027t going to make sense to anyone once we\u0027ve fixed that bug.\n\n(i know _very_ large files [like \u003e\u003d size of ram] cause problems; we\u0027ve seen bug reports of that, but i\u0027ve never heard problems with something as small as 1GiB ... is this on a low-memory device?)",
      "parentUuid": "6f8d819f_497bf165",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78194213_a92533c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-29T00:50:42Z",
      "side": 1,
      "message": "To be honest size of file is not problem here. It depends on USB transport level error perhaps host side xhci getting some kind of error which is just terminating adbd server read here.\n\nhow about I adding something like this:\nadb pull \u003cbig size file\u003e -\u003e When it gets terminated due to USB transport level issue",
      "parentUuid": "912cde1b_adc67eed",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "782f968f_fe641e00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-07-29T16:21:36Z",
      "side": 1,
      "message": "\u003e To be honest size of file is not problem here. It depends on USB transport level error perhaps host side xhci getting some kind of error which is just terminating adbd server read here.\n\ndo you see this on many devices? we have a test specifically for this case because it\u0027s been problematic in the past, but i\u0027m not aware of any current bugs (beyond the \"file large enough that we get oom killed [which can be worked around by turning off compression]\").\n\n\u003e how about I adding something like this:\n\u003e adb pull \u003cbig size file\u003e -\u003e When it gets terminated due to USB transport level issue\n\nwell, the \"when\" still implies this is expected behavior... how about\n\n\"\u003csomething that causes adb to disconnect at the USB transport level\u003e\"\n\nthat seems like what i said before but with your correction that it\u0027s specifically usb transport?",
      "parentUuid": "78194213_a92533c3",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "806d7d63_28b3621d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1764341
      },
      "writtenOn": "2022-07-29T17:16:01Z",
      "side": 1,
      "message": "\u003e\u003e do you see this on many devices?\nYes. This is on and off issue seen across many devices in automation environment. \n\n\"\u003csomething that causes adb to disconnect at the USB transport level\u003e\"\nagree. yes. Hence commit description start with sentence as: If for some reason the USB transport is disrupted or a transfer fails,",
      "parentUuid": "782f968f_fe641e00",
      "revId": "c84a44757ffcd55c2664e4f0b83f79612654b771",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}