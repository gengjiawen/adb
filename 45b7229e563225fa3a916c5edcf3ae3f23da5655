{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f803e2c5_987b79d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-08-05T14:49:35Z",
      "side": 1,
      "message": "what kind of error message do we get in that case? i _think_ the reason we never did anything to \"optimize\" this is that we get sensible \"you can\u0027t do that\" errors currently, but i\u0027m guessing we\u0027d get worse \"file not found\" errors if we made this change?\n\nit\u0027s not clear to me that that (or having to _add_ code to give better error messages) is a good tradeoff?",
      "revId": "45b7229e563225fa3a916c5edcf3ae3f23da5655",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "201e4bf8_c90d40e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T16:41:42Z",
      "side": 1,
      "message": "hmm good point, I didn\u0027t give it that much thought tbh. I was just making disable-verity command behave more like the remount command. and yes \u0027adb remount\u0027 works exactly as you described, on -user build it just emits a \u0027cannot find remount executable\u0027 error message.\n\nThe goal of this cl is really to just configure set-vetity-state like remount. That we don\u0027t install it on -user build at all in order to set the expectations clear (that being we never want to allow remount and set-vetity-state on user build)\n\nyeah I agree the error msg is not friendly if we don\u0027t install this on user build, but right now we\u0027re shipping executables on -user build that only do one job, print \"not supported on user build\", which is kind of wasteful.\n\notoh is it that important to maintin helpful error message for adb remount \u0026 disable-verity on user build? these are never supported nor advertised on user build, and had always been debug build utilities.",
      "parentUuid": "f803e2c5_987b79d4",
      "revId": "45b7229e563225fa3a916c5edcf3ae3f23da5655",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "008fdd92_e90b34cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-08-05T20:23:37Z",
      "side": 1,
      "message": "\u003e otoh is it that important to maintin helpful error message for adb remount \u0026 disable-verity on user build? these are never supported nor advertised on user build, and had always been debug build utilities.\n\nwell, in general, yes: \"there are few more useful things we do than improve our error messages\".\n\nhelping every individual/company that hits a problem doesn\u0027t scale. tweaking the error message until people can help themselves does.\n\ni\u0027m a bit confused what you\u0027re telling me about `remount` --- you\u0027re saying that although it\u0027s not explicitly excluded here (so we _build_ it), it\u0027s not being installed on the device for some other reason (which is presumably a hack somewhere else that we can remove if we merge this?), and we already get a crappy error message? if that\u0027s the case, i\u0027ll trade you the cl that removes the hack that\u0027s currently preventing remount from being installed for +2 on this one, which seems like a cleaner way to avoid installing it (and, as you say, makes remount and set-verity-state consistent) :-)",
      "parentUuid": "201e4bf8_c90d40e2",
      "revId": "45b7229e563225fa3a916c5edcf3ae3f23da5655",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a73be2_f0639c32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-06T07:11:09Z",
      "side": 1,
      "message": "it\u0027s not a hack, right now `remount` is installed with PRODUCT_PACKAGES_DEBUG in base_system.mk, it\u0027s one of the many ways to skip installing something on USER build. (see other CL in same topic)\nand yes executing `adb remount` with user build emits the dodo message right now:\n```\n\u003e adb -e remount   \n/system/bin/sh: remount: inaccessible or not found\n```\n\n`adb disable-verity` (which calls set-verity-state under the hood) OTOH produces subpar messages, it\u0027s suggesting user to try \"adb root\", which is not available on user build:\n```\n\u003e adb -e disable-verity\navb_user_verity.c:92: ERROR: Error loading footer from partition \u0027boot_a\u0027\nError getting verity state. Try adb root first?\n```\n\nHow about we teach adb/adbd to check if the binaries exist before executing?\n\nFor adbd, just stat(/system/bin/remount) before actually execve in to it.\nFor adb, we can use \"command -v remount\" to check the existence of the remount binary before actually executing it.",
      "parentUuid": "008fdd92_e90b34cc",
      "revId": "45b7229e563225fa3a916c5edcf3ae3f23da5655",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}