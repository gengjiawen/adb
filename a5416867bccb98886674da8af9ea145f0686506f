{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ebfa5114_2c9abca6",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T18:17:44Z",
      "side": 1,
      "message": "\u003ctime.h\u003e --- avoid the \u003cc*\u003e headers (which are subtly different) unless you can say _why_ you need them. (and then say why in a code comment :-) )",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6df3a2a2_833ac675",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T23:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebfa5114_2c9abca6",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a839844_dd12cb17",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T18:17:44Z",
      "side": 1,
      "message": "accidentally left in?",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12b93588_db97baeb",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T21:01:41Z",
      "side": 1,
      "message": "No, I really meant to do true random (as opposed to pseudo random).",
      "parentUuid": "7a839844_dd12cb17",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffe018cf_48d85df9",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T21:06:37Z",
      "side": 1,
      "message": "why? that\u0027s just adding flakines...",
      "parentUuid": "12b93588_db97baeb",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32f84671_3109bb66",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T21:53:44Z",
      "side": 1,
      "message": "Curious as to how flakiness will worsen?\nThe generated port (line #44) is assigned to a const int and is immutable.",
      "parentUuid": "ffe018cf_48d85df9",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c34a023c_c39ba2f6",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1083168
      },
      "writtenOn": "2023-01-20T23:19:03Z",
      "side": 1,
      "message": "It is an issue I mentioned in the other CL: It affect the ability to reproduce tests in the exact same condition. I don\u0027t think we should use `rand()` at all.",
      "parentUuid": "32f84671_3109bb66",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e469616_6c8fac59",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T23:25:06Z",
      "side": 1,
      "message": "\u003e The generated port (line #44) is assigned to a const int and is immutable.\n\nfor _one run_, but that\u0027s not how flakiness works --- like sanglardf says, flakiness is all about differences _between_ runs, and randomness always increases that, and the \"better\" your randomness is, the worse that gets.\n\nusually, port 0 is the best way out of this situation. if you can\u0027t do that (and it\u0027s probably worth checking whether you can just fix the callee?) then the least worst trick i\u0027ve seen is to write a function that uses port 0 to get a port allocated, closes that socket, and then assumes that port is going to stay free for the duration of your test run. either that, or you come up with a port that you have some reason to know is guaranteed to always be free (but i can\u0027t think of one).",
      "parentUuid": "c34a023c_c39ba2f6",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8853db_19800939",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T23:26:46Z",
      "side": 1,
      "message": "The test param (const int port) is immutable. It\u0027s unclear to me how this would make it flaky.",
      "parentUuid": "c34a023c_c39ba2f6",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "490e5e5f_40f2c8d8",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T18:17:44Z",
      "side": 1,
      "message": "can you not just pass 0 and get one assigned?",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76fb7898_e2521596",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T21:01:41Z",
      "side": 1,
      "message": "The higher level abstraction returns \"invalid port\" if 0 is passed in.",
      "parentUuid": "490e5e5f_40f2c8d8",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bfb486b_f5b3bda0",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T18:17:44Z",
      "side": 1,
      "message": "shouldn\u0027t we check that there\u0027s actually something _on_ the port, rather than just checking for a log message?",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd58bb5d_173e1902",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T23:26:46Z",
      "side": 1,
      "message": "We are not checking for the log output (https://source.corp.google.com/android/packages/modules/adb/daemon/restart_service.cpp;l\u003d63), but rather the information that was transmitted across (https://source.corp.google.com/android/packages/modules/adb/daemon/restart_service.cpp;l\u003d65) - which is the last successful line executed.",
      "parentUuid": "4bfb486b_f5b3bda0",
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c30be98_105267db",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-20T18:17:44Z",
      "side": 1,
      "message": "use the libbase system properties APIs --- they\u0027ll give you std::strings right away.",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 55,
        "endChar": 55
      },
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a9f2cec_b9691ff9",
        "filename": "daemon/restart_service_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2023-01-20T23:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c30be98_105267db",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 55,
        "endChar": 55
      },
      "revId": "a5416867bccb98886674da8af9ea145f0686506f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}