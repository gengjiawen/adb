{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5953a61_7ddd3361",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-27T01:31:04Z",
      "side": 1,
      "message": "does it break something if we just fix that instead?",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "5fee7eba86f96eb6e6e33dcfdfc4e7154e9c1899",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "658b89f4_8b2cfcc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2024-03-27T02:36:23Z",
      "side": 1,
      "message": "Not as far as I\u0027m aware. I\u0027d be open to trying it and seeing if we break anyone. We could do that by modifying LinePrinter to write to stderr, and adding a bool to disable progress updates for commands that don\u0027t want it.",
      "parentUuid": "a5953a61_7ddd3361",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "5fee7eba86f96eb6e6e33dcfdfc4e7154e9c1899",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0672313_1874158b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-27T16:27:25Z",
      "side": 1,
      "message": "yeah, that sgtm. we have a lot of historical mistakes like this (it\u0027s pretty random whether any given command actually returns a meaningful exit status, for example), but we do _aim_ to behave right...",
      "parentUuid": "658b89f4_8b2cfcc3",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "5fee7eba86f96eb6e6e33dcfdfc4e7154e9c1899",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5af49ab8_cc5f8041",
        "filename": "client/file_sync_client.cpp",
        "patchSetId": 2
      },
      "lineNbr": 284,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2024-03-27T15:59:44Z",
      "side": 1,
      "message": "Is it possible to annotate the virtual overrides for readability purposes?\n`void Printf(const char* fmt, ...) override __attribute__((__format__(__printf__, 2, 3)))`",
      "range": {
        "startLine": 284,
        "startChar": 4,
        "endLine": 284,
        "endChar": 83
      },
      "revId": "5fee7eba86f96eb6e6e33dcfdfc4e7154e9c1899",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}