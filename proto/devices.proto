/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_package = "com.android.server.adb.protos";
option java_outer_classname = "DevicesProto";

package adb.proto;

// This mirrors adb.h's "enum ConnectionState"
enum ConnectionState {
    any = 0;
    connecting = 1;   // Haven't received a response from the device yet.
    authorizing = 2;  // Authorizing with keys from ADB_VENDOR_KEYS.
    unauthorized = 3; // ADB_VENDOR_KEYS exhausted, fell back to user prompt.
    noPermission = 4; // Insufficient permissions to communicate with the device.
    detached = 5;     // USB device that's detached from the adb server.
    offline = 6;
    bootloader = 7;   // Device running fastboot OS (fastboot) or userspace fastboot (fastbootd).
    device = 8;       // Device running Android OS (adbd).
    host = 9;         // What a device sees from its end of a Transport (adb host).
    recovery = 10;    // Device with bootloader loaded but no ROM OS loaded (adbd).
    sideload = 11;    // Device running Android OS Sideload mode (minadbd sideload mode).
    rescue = 12;      // Device running Android OS Rescue mode (minadbd rescue mode).
}

enum ConnectionType {
    UNKNOWN= 0;
    USB = 1;
    SOCKET = 2;
}

message Device {
    string serial = 1;
    ConnectionState state = 2;
    string devpath = 3;
    string product = 4;
    string model = 5;
    string device = 6;
    ConnectionType connection_type = 7;
    int64 negotiated_speed = 8;
    int64 max_speed = 9;
}

message Devices {
  repeated Device device = 1;
}
