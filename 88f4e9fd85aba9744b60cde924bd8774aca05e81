{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db417451_96a7fed9",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "it\u0027s always true, no, not just in tests?",
      "range": {
        "startLine": 129,
        "startChar": 15,
        "endLine": 129,
        "endChar": 34
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3d380d3_8e6f4597",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done - I meant to say that CreateCloser() (being only a test construct) understands a return value of zero to imply that more incoming data can be accepted (by the other end).",
      "parentUuid": "db417451_96a7fed9",
      "range": {
        "startLine": 129,
        "startChar": 15,
        "endLine": 129,
        "endChar": 34
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e79a6c3b_00538df4",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "this doesn\u0027t seem like it belongs in this change?\n\n(i think you should probably just drop this, but if you really wanted to do something, my suggestion would actually be ` \u003c\u003c \"https://b/12345\";` at the end of the ASSERT_EQ so anyone who sees the failure can go straight to the existing bug for it. but more useful than _that_ would be to disable this specific test. iirc renaming it `DISABLED_read_from_closing_socket` should do the trick. and then obviously revert that locally :-) if you do want to do that disablement, though, that seems like a separate unrelated change.)",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea63bf92_c2f77e59",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done - will disable this in a followup CL.",
      "parentUuid": "e79a6c3b_00538df4",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0762a25_270577ab",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1076798
      },
      "writtenOn": "2022-09-06T19:19:22Z",
      "side": 1,
      "message": "I don\u0027t think this is a double free, I think it\u0027s a bug in local_socket_flush_incoming where we immediately finish a deferred close when it successfully wrote any bytes, not when it completed.\n\nI think this bug has been there since I originally added deferred_close, I\u0027m not sure why it\u0027s reproducing at like \u003e50% for me now (maybe a kernel behavior change?)\n\nIn any case: https://android-review.googlesource.com/c/platform/packages/modules/adb/+/2208236",
      "parentUuid": "ea63bf92_c2f77e59",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7482842_3fe2d194",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T19:28:12Z",
      "side": 1,
      "message": "huh, weird. we\u0027d been wondering what had changed to increase the flake rate too.\n\n(especially because these tests seem to have been in presubmit much longer than i\u0027d realized. the TEST_MAPPING in system/core/ didn\u0027t look much different...)",
      "parentUuid": "c0762a25_270577ab",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39159789_c5b8123c",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "why are you passing an int by const reference?",
      "range": {
        "startLine": 277,
        "startChar": 38,
        "endLine": 277,
        "endChar": 39
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13b7ba42_a3609c83",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39159789_c5b8123c",
      "range": {
        "startLine": 277,
        "startChar": 38,
        "endLine": 277,
        "endChar": 39
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39fe8d6f_d9169581",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "(you already have this check in the caller; checking here would make sense if this were API, but it\u0027s a static function in a test, so YAGNI...)",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba60c03e_7cae8ee1",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39fe8d6f_d9169581",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59ce0d64_8a94de33",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "port",
      "range": {
        "startLine": 289,
        "startChar": 49,
        "endLine": 289,
        "endChar": 57
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3953327_a18fcd65",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59ce0d64_8a94de33",
      "range": {
        "startLine": 289,
        "startChar": 49,
        "endLine": 289,
        "endChar": 57
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6209075_c3bfec8d",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "i don\u0027t think it makes sense to check this comment in, even if it was helpful while reasoning about the code --- unless you want to write \"shouldn\u0027t flake/fail\" next to every line in every test :-)",
      "range": {
        "startLine": 291,
        "startChar": 28,
        "endLine": 291,
        "endChar": 68
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff2f8a01_c24f8b73",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6209075_c3bfec8d",
      "range": {
        "startLine": 291,
        "startChar": 28,
        "endLine": 291,
        "endChar": 68
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66fa4e07_26df9d8d",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "isn\u0027t this broken if you get assigned an IPv6 address?\n\ni think you need something like:\n```\n  sockaddr_storage ss;\n  socklen_t ss_size \u003d sizeof(ss);\n  ASSERT_EQ(0, adb_getsockname(listen_fd, reinterpret_cast\u003csockaddr*\u003e(\u0026ss), \u0026ss_size));\n  int assigned_port;\n  if (ss.ss_family \u003d\u003d AF_INET) {\n    assigned_port \u003d ntohs(reinterpret_cast\u003csockaddr_in\u003e(\u0026ss)-\u003esin_port);\n  } else {\n    assigned_port \u003d ntohs(reinterpret_cast\u003csockaddr_in6\u003e(\u0026ss)-\u003esin6_port);  \n  }\n  ASSERT_GE(assigned_port, 0);\n```\ninstead?",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f232555_e2e4394c",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66fa4e07_26df9d8d",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15f74345_dd58f6d6",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "no need for `struct` here. (fixed in my example.)",
      "range": {
        "startLine": 296,
        "startChar": 56,
        "endLine": 296,
        "endChar": 62
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f6d7380_99a15a98",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15f74345_dd58f6d6",
      "range": {
        "startLine": 296,
        "startChar": 56,
        "endLine": 296,
        "endChar": 62
      },
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e28c3fa_28e6fd3c",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T18:05:55Z",
      "side": 1,
      "message": "no need for `ret` if it\u0027s just used in an ASSERT_EQ. (fixed in my example.)",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d834e367_72573443",
        "filename": "socket_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1579231
      },
      "writtenOn": "2022-09-06T18:45:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e28c3fa_28e6fd3c",
      "revId": "88f4e9fd85aba9744b60cde924bd8774aca05e81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}